version: 2.1

jobs:

  version_check:
    docker:
      - image: circleci/node:lts
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Version Check for Semantic Release
          command: |
            ls -la
            npm install
            npm run eslint
            npm run format:check
            npm run build
            npx semantic-release --dry-run --branch ${CIRCLE_BRANCH}
            npx semantic-release --dry-run --branch ${CIRCLE_BRANCH} > sem-rel-dry-run.txt
            echo
            echo "catted file:"
            cat sem-rel-dry-run.txt
            echo "branch: ${CIRCLE_BRANCH}"

            if grep "The next release version is" sem-rel-dry-run.txt
            then
              dry_run_version=$(cat sem-rel-dry-run.txt | grep "The next release version is" | sed -n -e 's/^.*is //p')
              echo "Dry run version: ${dry_run_version}"
              plugin_file_version=$(cat plugin.yaml | grep version | sed -n -e 's/^\(version:\) \"\(.*\)\"/\2/p')
              echo "Plugin file version: ${plugin_file_version}"
              # Fail if the "next" version from the dry-run is not equal to the version specified in the plugin.yaml
              test $dry_run_version = $plugin_file_version
            elif grep "a new version won’t be published" sem-rel-dry-run.txt
            then
              echo "a new version won’t be published"
            else
              echo "unknown semantic-release dry-run state - failing"
            exit 1
            fi

  build:
    docker:
      - image: circleci/node:lts
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Build and test
          command: |
            ls -la
            npm install
            npm run eslint
            npm run format:check
            npm run build
            npm test

#            npx semantic-release --dry-run --branch ${CIRCLE_BRANCH}
#            npx semantic-release --dry-run --branch ${CIRCLE_BRANCH} > sem-rel-dry-run.txt
#            echo
#            echo "catted file:"
#            cat sem-rel-dry-run.txt
#            echo "branch: ${CIRCLE_BRANCH}"
#
#            if grep "The next release version is" sem-rel-dry-run.txt
#            then
#              dry_run_version=$(cat sem-rel-dry-run.txt | grep "The next release version is" | sed -n -e 's/^.*is //p')
#              echo "Dry run version: ${dry_run_version}"
#              plugin_file_version=$(cat plugin.yaml | grep version | sed -n -e 's/^\(version:\) \"\(.*\)\"/\2/p')
#              echo "Plugin file version: ${plugin_file_version}"
#              # Fail if the "next" version from the dry-run is not equal to the version specified in the plugin.yaml
#              test $dry_run_version = $plugin_file_version
#            elif grep "a new version won’t be published" sem-rel-dry-run.txt
#            then
#              echo "a new version won’t be published"
#            else
#              echo "unknown semantic-release dry-run state - failing"
#            exit 1
#            fi

  release:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - run: npm install
      - run: npm run build
      - run:
          name: Create binaries with pkg
          command: |
            npm run pkg
            ls -la
            # npm install
            # npm run build
            shasum -a 256 ts-sem-rel-circle-linux > ts-sem-rel-circle-linux.sha256
            shasum -a 256 ts-sem-rel-circle-macos > ts-sem-rel-circle-macos.sha256
            shasum -a 256 ts-sem-rel-circle-win.exe > ts-sem-rel-circle-win.exe.sha256
            ls -la
      - run:
          name: Semantic Release
          command: |
            npx semantic-release --dry-run
            # npx semantic-release

workflows:
  version: 2
  build_and_test:
    jobs:
      - version_check
      - build:
          requires:
            - version_check
      - release:
          requires:
            - build
          filters:
            branches:
              only: master
